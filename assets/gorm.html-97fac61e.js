import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as i,a as n,b as s,d as t,e as p}from"./app-950724a6.js";const l={},u=n("h1",{id:"gorm-使用方法",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#gorm-使用方法","aria-hidden":"true"},"#"),s(" GORM 使用方法")],-1),r={id:"官方文档",tabindex:"-1"},d=n("a",{class:"header-anchor",href:"#官方文档","aria-hidden":"true"},"#",-1),k={href:"https://gorm.io/",target:"_blank",rel:"noopener noreferrer"},v=p(`<h2 id="导入包" tabindex="-1"><a class="header-anchor" href="#导入包" aria-hidden="true">#</a> 导入包</h2><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token string">&quot;github.com/suyuan32/simple-admin-common/orm/gorm&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="config-文件声明" tabindex="-1"><a class="header-anchor" href="#config-文件声明" aria-hidden="true">#</a> config 文件声明</h2><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Config <span class="token keyword">struct</span> <span class="token punctuation">{</span>
 zrpc<span class="token punctuation">.</span>RpcServerConf
 DatabaseConf gorm<span class="token punctuation">.</span>Conf
 RedisConf    redis<span class="token punctuation">.</span>RedisConf
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="etc-yaml-文件配置" tabindex="-1"><a class="header-anchor" href="#etc-yaml-文件配置" aria-hidden="true">#</a> <code>etc/*.yaml</code> 文件配置</h2><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">DatabaseConf</span><span class="token punctuation">:</span>
  <span class="token key atrule">Type</span><span class="token punctuation">:</span> mysql
  <span class="token key atrule">Path</span><span class="token punctuation">:</span> <span class="token string">&quot;127.0.0.1&quot;</span>
  <span class="token key atrule">Port</span><span class="token punctuation">:</span> <span class="token number">3306</span>
  <span class="token key atrule">Config</span><span class="token punctuation">:</span> charset=utf8mb4<span class="token important">&amp;parseTime=True&amp;loc=Local</span>
  <span class="token key atrule">DBName</span><span class="token punctuation">:</span> simple_admin
  <span class="token key atrule">Username</span><span class="token punctuation">:</span>
  <span class="token key atrule">Password</span><span class="token punctuation">:</span>
  <span class="token key atrule">MaxIdleConn</span><span class="token punctuation">:</span> <span class="token number">10</span>
  <span class="token key atrule">MaxOpenConn</span><span class="token punctuation">:</span> <span class="token number">100</span>
  <span class="token key atrule">LogMode</span><span class="token punctuation">:</span> error
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="初始化" tabindex="-1"><a class="header-anchor" href="#初始化" aria-hidden="true">#</a> 初始化</h2><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>    db<span class="token punctuation">,</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span>DatabaseConf<span class="token punctuation">.</span><span class="token function">NewGORM</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
  logx<span class="token punctuation">.</span><span class="token function">Errorw</span><span class="token punctuation">(</span>logmessage<span class="token punctuation">.</span>DatabaseError<span class="token punctuation">,</span> logx<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;detail&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token boolean">nil</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),m={href:"https://github.com/suyuan32/simple-admin-core/blob/master/rpc/internal/svc/service_context.go",target:"_blank",rel:"noopener noreferrer"},b=p(`<h2 id="定义-model" tabindex="-1"><a class="header-anchor" href="#定义-model" aria-hidden="true">#</a> 定义 Model</h2><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> model

<span class="token keyword">import</span> <span class="token string">&quot;gorm.io/gorm&quot;</span>

<span class="token keyword">type</span> Api <span class="token keyword">struct</span> <span class="token punctuation">{</span>
 gorm<span class="token punctuation">.</span>Model
 Path        <span class="token builtin">string</span> <span class="token string">\`json:&quot;path&quot; gorm:&quot;comment:api path&quot;\`</span>                    <span class="token comment">// api path</span>
 Description <span class="token builtin">string</span> <span class="token string">\`json:&quot;description&quot; gorm:&quot;comment:api description&quot;\`</span>      <span class="token comment">// api description</span>
 ApiGroup    <span class="token builtin">string</span> <span class="token string">\`json:&quot;apiGroup&quot; gorm:&quot;comment:api group&quot;\`</span>               <span class="token comment">// api group</span>
 Method      <span class="token builtin">string</span> <span class="token string">\`json:&quot;method&quot; gorm:&quot;default:POST;comment: http method&quot;\`</span> <span class="token comment">// http method</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),g={href:"https://github.com/suyuan32/simple-admin-core/tree/master/rpc/internal/model",target:"_blank",rel:"noopener noreferrer"},h=p(`<h2 id="获取数据" tabindex="-1"><a class="header-anchor" href="#获取数据" aria-hidden="true">#</a> 获取数据</h2><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> logic

<span class="token keyword">import</span> <span class="token punctuation">(</span>
 <span class="token string">&quot;context&quot;</span>

 <span class="token string">&quot;github.com/suyuan32/simple-admin-common/msg/logmsg&quot;</span>
 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/internal/model&quot;</span>
 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/internal/svc&quot;</span>
 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/types/core&quot;</span>

 <span class="token string">&quot;github.com/zeromicro/go-zero/core/logx&quot;</span>
 <span class="token string">&quot;google.golang.org/grpc/codes&quot;</span>
 <span class="token string">&quot;google.golang.org/grpc/status&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> GetApiListLogic <span class="token keyword">struct</span> <span class="token punctuation">{</span>
 ctx    context<span class="token punctuation">.</span>Context
 svcCtx <span class="token operator">*</span>svc<span class="token punctuation">.</span>ServiceContext
 logx<span class="token punctuation">.</span>Logger
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">NewGetApiListLogic</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> svcCtx <span class="token operator">*</span>svc<span class="token punctuation">.</span>ServiceContext<span class="token punctuation">)</span> <span class="token operator">*</span>GetApiListLogic <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token operator">&amp;</span>GetApiListLogic<span class="token punctuation">{</span>
  ctx<span class="token punctuation">:</span>    ctx<span class="token punctuation">,</span>
  svcCtx<span class="token punctuation">:</span> svcCtx<span class="token punctuation">,</span>
  Logger<span class="token punctuation">:</span> logx<span class="token punctuation">.</span><span class="token function">WithContext</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>l <span class="token operator">*</span>GetApiListLogic<span class="token punctuation">)</span> <span class="token function">GetApiList</span><span class="token punctuation">(</span>in <span class="token operator">*</span>core<span class="token punctuation">.</span>ApiPageReq<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>core<span class="token punctuation">.</span>ApiListResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 db <span class="token operator">:=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>model<span class="token punctuation">.</span>Api<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
 <span class="token keyword">var</span> apis <span class="token punctuation">[</span><span class="token punctuation">]</span>model<span class="token punctuation">.</span>Api

 <span class="token keyword">if</span> in<span class="token punctuation">.</span>Path <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
  db <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;path LIKE ?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;%&quot;</span><span class="token operator">+</span>in<span class="token punctuation">.</span>Path<span class="token operator">+</span><span class="token string">&quot;%&quot;</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>

 <span class="token keyword">if</span> in<span class="token punctuation">.</span>Description <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
  db <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;description LIKE ?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;%&quot;</span><span class="token operator">+</span>in<span class="token punctuation">.</span>Description<span class="token operator">+</span><span class="token string">&quot;%&quot;</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>

 <span class="token keyword">if</span> in<span class="token punctuation">.</span>Method <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
  db <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;method = ?&quot;</span><span class="token punctuation">,</span> in<span class="token punctuation">.</span>Method<span class="token punctuation">)</span>
 <span class="token punctuation">}</span>

 <span class="token keyword">if</span> in<span class="token punctuation">.</span>Group <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
  db <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span><span class="token string">&quot;api_group = ?&quot;</span><span class="token punctuation">,</span> in<span class="token punctuation">.</span>Group<span class="token punctuation">)</span>
 <span class="token punctuation">}</span>

 result <span class="token operator">:=</span> db<span class="token punctuation">.</span><span class="token function">Limit</span><span class="token punctuation">(</span><span class="token function">int</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Page<span class="token punctuation">.</span>PageSize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Offset</span><span class="token punctuation">(</span><span class="token function">int</span><span class="token punctuation">(</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Page<span class="token punctuation">.</span>Page <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> in<span class="token punctuation">.</span>Page<span class="token punctuation">.</span>PageSize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
  <span class="token function">Order</span><span class="token punctuation">(</span><span class="token string">&quot;api_group desc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>apis<span class="token punctuation">)</span>

 <span class="token keyword">if</span> result<span class="token punctuation">.</span>Error <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
  logx<span class="token punctuation">.</span><span class="token function">Errorw</span><span class="token punctuation">(</span>logmessage<span class="token punctuation">.</span>DatabaseError<span class="token punctuation">,</span> logx<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;detail&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>Error<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> status<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>codes<span class="token punctuation">.</span>Internal<span class="token punctuation">,</span> result<span class="token punctuation">.</span>Error<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>

 resp <span class="token operator">:=</span> <span class="token operator">&amp;</span>core<span class="token punctuation">.</span>ApiListResp<span class="token punctuation">{</span><span class="token punctuation">}</span>
 resp<span class="token punctuation">.</span>Total <span class="token operator">=</span> <span class="token function">uint64</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>RowsAffected<span class="token punctuation">)</span>
 <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> apis <span class="token punctuation">{</span>
  resp<span class="token punctuation">.</span>Data <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>Data<span class="token punctuation">,</span> <span class="token operator">&amp;</span>core<span class="token punctuation">.</span>ApiInfo<span class="token punctuation">{</span>
   Id<span class="token punctuation">:</span>          <span class="token function">uint64</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span>ID<span class="token punctuation">)</span><span class="token punctuation">,</span>
   CreatedAt<span class="token punctuation">:</span>    v<span class="token punctuation">.</span>CreatedAt<span class="token punctuation">.</span><span class="token function">UnixMilli</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
   Path<span class="token punctuation">:</span>        v<span class="token punctuation">.</span>Path<span class="token punctuation">,</span>
   Description<span class="token punctuation">:</span> v<span class="token punctuation">.</span>Description<span class="token punctuation">,</span>
   Group<span class="token punctuation">:</span>       v<span class="token punctuation">.</span>ApiGroup<span class="token punctuation">,</span>
   Method<span class="token punctuation">:</span>      v<span class="token punctuation">.</span>Method<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">return</span> resp<span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>使用 l.svc.DB.Model().Where().Find() 即可</p></blockquote>`,3),f={href:"https://github.com/suyuan32/simple-admin-core/blob/master/rpc/internal/logic/getapilistlogic.go",target:"_blank",rel:"noopener noreferrer"},q={href:"https://gorm.io/",target:"_blank",rel:"noopener noreferrer"};function y(x,_){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,n("h4",r,[d,s(),n("a",k,[s("官方文档"),t(a)])]),v,n("p",null,[n("a",m,[s("Init"),t(a)])]),b,n("p",null,[n("a",g,[s("Model"),t(a)])]),h,n("p",null,[n("a",f,[s("GetApiList"),t(a)])]),n("p",null,[n("a",q,[s("GORM"),t(a)])])])}const L=e(l,[["render",y],["__file","gorm.html.vue"]]);export{L as default};
