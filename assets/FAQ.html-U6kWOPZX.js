import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as r,c,a as e,f as a,b as t,e as n}from"./app-7u129erx.js";const l={},d=n(`<h1 id="faq" tabindex="-1"><a class="header-anchor" href="#faq" aria-hidden="true">#</a> FAQ</h1><h2 id="what-is-the-default-account" tabindex="-1"><a class="header-anchor" href="#what-is-the-default-account" aria-hidden="true">#</a> What is the default account?</h2><p>A: Account: <code>admin</code> Password: <code>simple-admin</code></p><h2 id="registered-account-can-not-log-in" tabindex="-1"><a class="header-anchor" href="#registered-account-can-not-log-in" aria-hidden="true">#</a> Registered account can not log in?</h2><p>A: The default role after successful registration is a staff, without the permission to log in. You need to modify the role permissions or set the user&#39;s role to administrator.</p><div class="hint-container info"><p class="hint-container-title">Info</p><p>The new version now supports configuring the default role, department, and position of registered users through ProjectConf:</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">ProjectConf</span><span class="token punctuation">:</span>
  <span class="token key atrule">DefaultRoleId</span><span class="token punctuation">:</span> <span class="token number">2</span>
  <span class="token key atrule">DefaultDepartmentId</span><span class="token punctuation">:</span> <span class="token number">1</span>
  <span class="token key atrule">DefaultPositionId</span><span class="token punctuation">:</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="how-many-ways-does-go-zero-have-for-service-registration-and-discovery" tabindex="-1"><a class="header-anchor" href="#how-many-ways-does-go-zero-have-for-service-registration-and-discovery" aria-hidden="true">#</a> How many ways does go-zero have for service registration and discovery?</h2>`,7),p={href:"https://mp.weixin.qq.com/s/-WaWJaM_ePEQOf7ExNJe7w",target:"_blank",rel:"noopener noreferrer"},u=n(`<h2 id="how-to-deal-with-cross-domain-issues" tabindex="-1"><a class="header-anchor" href="#how-to-deal-with-cross-domain-issues" aria-hidden="true">#</a> How to deal with cross domain issues?</h2><p>A: Modify api/core.go</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>server <span class="token operator">:=</span> rest<span class="token punctuation">.</span><span class="token function">MustNewServer</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>RestConf<span class="token punctuation">,</span> rest<span class="token punctuation">.</span><span class="token function">WithCors</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Modify <code>*</code> to your own domain name or IP, the default is <code>*</code>, allowing all.</p><h2 id="how-to-sync-a-fork-repository" tabindex="-1"><a class="header-anchor" href="#how-to-sync-a-fork-repository" aria-hidden="true">#</a> How to sync a fork repository?</h2><blockquote><p>Configure the remote library for fork, check the remote status first</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> remote <span class="token parameter variable">-v</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>Determine an upstream warehouse that will be synchronized to the fork remote, the address after upstream is the git address you are about to synchronize</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> remote <span class="token function">add</span> upstream https://github.com/suyuan32/simple-admin-core.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>start sync fork</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> fetch upstream
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>switch to local master branch</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>Merge the upstream/master branch into the local master, so that the synchronization is completed and the locally modified content will not be lost.</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> merge upstream/master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="how-to-get-environment-variables" tabindex="-1"><a class="header-anchor" href="#how-to-get-environment-variables" aria-hidden="true">#</a> How to get environment variables?</h2><p>Just declare <code>env</code> in the variable of <code>config.go</code></p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Config <span class="token keyword">struct</span> <span class="token punctuation">{</span>
      ServiceName <span class="token builtin">string</span> <span class="token string">\`json:&quot;,env=SERVICE_NAME&quot;\`</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="how-to-configure-the-windows-environment" tabindex="-1"><a class="header-anchor" href="#how-to-configure-the-windows-environment" aria-hidden="true">#</a> How to configure the Windows environment?</h2><div class="hint-container info"><p class="hint-container-title">Info</p><p>Please install golang in windows firstly.</p></div>`,20),h=e("strong",null,[a("First install "),e("code",null,"git"),a(", we need "),e("code",null,"git bash"),a(" command line to execute linux commands")],-1),m=e("br",null,null,-1),v=e("code",null,"make",-1),b={href:"https://chocolatey.org/install#individual",target:"_blank",rel:"noopener noreferrer"},g=n(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># POWERSHELL Execution in Admin State</span>

Set-ExecutionPolicy Bypass <span class="token parameter variable">-Scope</span> Process -Force<span class="token punctuation">;</span> <span class="token punctuation">[</span>System.Net.ServicePointManager<span class="token punctuation">]</span>::SecurityProtocol <span class="token operator">=</span> <span class="token punctuation">[</span>System.Net.ServicePointManager<span class="token punctuation">]</span>::SecurityProtocol <span class="token parameter variable">-bor</span> <span class="token number">3072</span><span class="token punctuation">;</span> iex <span class="token variable"><span class="token punctuation">((</span>New<span class="token operator">-</span>Object System.Net.WebClient<span class="token punctuation">)</span>.DownloadString<span class="token punctuation">(</span>&#39;https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>community.chocolatey.org<span class="token operator">/</span>install.ps1&#39;<span class="token punctuation">))</span></span>

<span class="token comment"># And then run</span>
choco <span class="token function">install</span> <span class="token function">make</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Restart the IDE after <code>make</code> is installed, and select <code>git bash</code> for the command line of the IDE</p></blockquote><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>Paths under <code>git bash</code> are separated by <code>/</code>, windows defaults to <code>\\</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>goctls api proto <span class="token parameter variable">--proto</span><span class="token operator">=</span>D:/projects/simple-admin-example-rpc/example.proto <span class="token parameter variable">--style</span><span class="token operator">=</span>go_zero <span class="token parameter variable">--api_service_name</span><span class="token operator">=</span>example <span class="token parameter variable">--rpc_service_name</span><span class="token operator">=</span>example <span class="token parameter variable">--o</span><span class="token operator">=</span>./ <span class="token parameter variable">--model</span><span class="token operator">=</span>Student <span class="token parameter variable">--rpc_name</span><span class="token operator">=</span>Example <span class="token parameter variable">--grpc_package</span><span class="token operator">=</span>github.com/suyuan32/simple-admin-example-rpc/example
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><h2 id="what-special-components-does-the-menu-have" tabindex="-1"><a class="header-anchor" href="#what-special-components-does-the-menu-have" aria-hidden="true">#</a> What special components does the menu have?</h2><ul><li>LAYOUT - When the menu is a directory, the component needs to be set to <code>LAYOUT</code></li><li>IFrame - When the menu is an Iframe, it needs to be set to <code>Iframe</code>, and both embedded and external links need to be set to <code>Iframe</code></li></ul><h2 id="how-to-develop-multiple-interdependent-projects-locally" tabindex="-1"><a class="header-anchor" href="#how-to-develop-multiple-interdependent-projects-locally" aria-hidden="true">#</a> How to develop multiple interdependent projects locally?</h2><p>Use the workspace mode. After go 1.18, there is a workspace mode. You only need to put the api and rpc projects in the same folder and execute the command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Such as putting multiple projects in one place for development</span>
go work init simple-admin-common/ simple-admin-core/ simple-admin-tools/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>You can get the latest code changes locally without committing to the repository.</p><h2 id="how-to-debug-backend-ui" tabindex="-1"><a class="header-anchor" href="#how-to-debug-backend-ui" aria-hidden="true">#</a> How to debug Backend UI?</h2><ul><li>First run the project, execute <code>pnpm dev</code></li><li>Then set breakpoint and press <code>F5</code> in vscode to debug</li></ul>`,11);function k(f,w){const s=i("ExternalLinkIcon");return r(),c("div",null,[d,e("p",null,[a("A: 3 kinds "),e("a",p,[a("go-zero"),t(s)])]),u,e("blockquote",null,[e("p",null,[h,a(),m,e("strong",null,[a("Secondly, you need to install the "),v,a(" command, we install it through "),e("a",b,[a("Chocolatey"),t(s)])])])]),g])}const _=o(l,[["render",k],["__file","FAQ.html.vue"]]);export{_ as default};
