import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as t,c as a,e as s}from"./app-KCtNLLRl.js";const n={},r=s(`<h2 id="generating-dockerfile" tabindex="-1"><a class="header-anchor" href="#generating-dockerfile" aria-hidden="true">#</a> Generating Dockerfile</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>goctls <span class="token function">docker</span> <span class="token parameter variable">-l</span> <span class="token parameter variable">-u</span> yuansu.china.work@gmail.com <span class="token parameter variable">-c</span> <span class="token parameter variable">-p</span> <span class="token number">9104</span> <span class="token parameter variable">-s</span> mms <span class="token parameter variable">-t</span> rpc <span class="token parameter variable">-z</span> Asia/Shanghai
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="introduction-to-docker-parameters" tabindex="-1"><a class="header-anchor" href="#introduction-to-docker-parameters" aria-hidden="true">#</a> Introduction to <code>docker</code> Parameters</h3><table><thead><tr><th>Parameter</th><th>Required</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td>service_name</td><td>Yes</td><td></td><td>The service name of the project, such as <code>core</code></td></tr><tr><td>service_type</td><td>No</td><td><code>rpc</code></td><td>The service type, such as <code>rpc</code> or <code>api</code></td></tr><tr><td>author</td><td>No</td><td><code>example@example.com</code></td><td>The author information</td></tr><tr><td>base</td><td>No</td><td><code>alpine:latest</code></td><td>The base image to run the project</td></tr><tr><td>branch</td><td>No</td><td></td><td>The branch of the remote repository, it must be used with <code>--remote</code></td></tr><tr><td>china</td><td>No</td><td></td><td>If your server is in China, set this to <code>true</code></td></tr><tr><td>home</td><td>No</td><td></td><td>The goctl home path of the template, <code>--home</code> and <code>--remote</code> cannot be set at the same time, if they are, <code>--remote</code> has higher priority</td></tr><tr><td>image</td><td>No</td><td><code>golang:1.20.3-alpine3.17</code></td><td>The image for building the project</td></tr><tr><td>port</td><td>No</td><td></td><td>The port to expose, default none</td></tr><tr><td>remote</td><td>No</td><td></td><td>The remote git repository of the template, <code>--home</code> and <code>--remote</code> cannot be set at the same time, if they are, <code>--remote</code> has higher priority. The git repository directory must be consistent with the https://github.com/zeromicro/go-zero-template directory structure</td></tr><tr><td>tz</td><td>No</td><td></td><td>The timezone of the container, such as <code>Asia/Shanghai</code></td></tr><tr><td>local_build</td><td>No</td><td>false</td><td>Whether to build the project locally, without using an intermediate image</td></tr></tbody></table><blockquote><p>Run <code>goctls docker -h</code> to see more:</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Generate Dockerfile

Usage:
  goctls <span class="token function">docker</span> <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>

Flags:
  -u, <span class="token parameter variable">--author</span> string         The author information <span class="token punctuation">(</span>default <span class="token string">&quot;example@example.com&quot;</span><span class="token punctuation">)</span>
  -a, <span class="token parameter variable">--base</span> string           The base image to run the project <span class="token punctuation">(</span>default <span class="token string">&quot;alpine:latest&quot;</span><span class="token punctuation">)</span>
  -b, <span class="token parameter variable">--branch</span> string         The branch of the remote repo, it does work with <span class="token parameter variable">--remote</span>
  -c, <span class="token parameter variable">--china</span>                 If your server <span class="token keyword">in</span> China, <span class="token builtin class-name">set</span> <span class="token boolean">true</span>
  -h, <span class="token parameter variable">--help</span>                  <span class="token builtin class-name">help</span> <span class="token keyword">for</span> <span class="token function">docker</span>
  -m, <span class="token parameter variable">--home</span> string           The goctl home path of the template, <span class="token parameter variable">--home</span> and <span class="token parameter variable">--remote</span> cannot be <span class="token builtin class-name">set</span> at the same time, <span class="token keyword">if</span> they are, <span class="token parameter variable">--remote</span> has higher priority
  -i, <span class="token parameter variable">--image</span> string          The image <span class="token keyword">for</span> building project <span class="token punctuation">(</span>default <span class="token string">&quot;golang:1.20.5-alpine3.17&quot;</span><span class="token punctuation">)</span>
  -l, <span class="token parameter variable">--local_build</span>           Whether to build the project locally without using intermediate images
  -p, <span class="token parameter variable">--port</span> int              The port to expose, default none
  -r, <span class="token parameter variable">--remote</span> string         The remote <span class="token function">git</span> repo of the template, <span class="token parameter variable">--home</span> and <span class="token parameter variable">--remote</span> cannot be <span class="token builtin class-name">set</span> at the same time, <span class="token keyword">if</span> they are, <span class="token parameter variable">--remote</span> has higher priority
                              The <span class="token function">git</span> repo directory must be consistent with the https://github.com/zeromicro/go-zero-template directory structure
  -s, <span class="token parameter variable">--service_name</span> string   The <span class="token function">service</span> name of the project
  -t, <span class="token parameter variable">--service_type</span> string   The <span class="token function">service</span> type, such as rpc, api <span class="token punctuation">(</span>default <span class="token string">&quot;rpc&quot;</span><span class="token punctuation">)</span>
  -z, <span class="token parameter variable">--tz</span> string             The timezone of the container, such as Asia/Shanghai
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="environment-variables" tabindex="-1"><a class="header-anchor" href="#environment-variables" aria-hidden="true">#</a> Environment variables</h2><table><thead><tr><th>Environment Variables</th><th>Introduction</th></tr></thead><tbody><tr><td>DOCKER_USERNAME</td><td>docker repository username</td></tr><tr><td>DOCKER_PASSWORD</td><td>docker repository password</td></tr><tr><td>REPO</td><td>docker repository addressï¼Œ official hub: docker.io</td></tr></tbody></table>`,8),o=[r];function i(d,c){return t(),a("div",null,o)}const h=e(n,[["render",i],["__file","4-docker.html.vue"]]);export{h as default};
