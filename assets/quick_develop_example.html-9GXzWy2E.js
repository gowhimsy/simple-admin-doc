import{_ as i,a as c}from"./example_en_title-lubX2uoZ.js";import{_ as l}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as u,c as r,a as n,b as a,d as s,w as e,e as d}from"./app-9xAVjQoh.js";const k={},m=n("h2",{id:"rapid-development-demo",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#rapid-development-demo","aria-hidden":"true"},"#"),a(" Rapid development demo")],-1),v={class:"hint-container warning"},b=n("p",{class:"hint-container-title"},"Warning",-1),h={href:"https://github.com/suyuan32/simple-admin-example-api",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/suyuan32/simple-admin-file",target:"_blank",rel:"noopener noreferrer"},f=n("br",null,null,-1),q=n("br",null,null,-1),_=n("h2",{id:"install-goctls",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#install-goctls","aria-hidden":"true"},"#"),a(" Install goctls")],-1),x=d(`<h2 id="rpc-service-example-take-department-as-an-example" tabindex="-1"><a class="header-anchor" href="#rpc-service-example-take-department-as-an-example" aria-hidden="true">#</a> RPC service example, take department as an example</h2><blockquote><p>First add department.go in rpc/ent/schema folder</p></blockquote><div class="language-protobuf line-numbers-mode" data-ext="protobuf"><pre class="language-protobuf"><code><span class="token keyword">package</span> schema

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;entgo.io/ent&quot;</span>
	<span class="token string">&quot;entgo.io/ent/dialect/entsql&quot;</span>
	<span class="token string">&quot;entgo.io/ent/schema&quot;</span>
	<span class="token string">&quot;entgo.io/ent/schema/edge&quot;</span>
	<span class="token string">&quot;entgo.io/ent/schema/field&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-common/orm/ent/mixins&quot;</span>
<span class="token punctuation">)</span>

type Department struct <span class="token punctuation">{</span>
	ent<span class="token punctuation">.</span>Schema
<span class="token punctuation">}</span>

<span class="token function">func</span> <span class="token punctuation">(</span>Department<span class="token punctuation">)</span> <span class="token function">Fields</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Field <span class="token punctuation">{</span>
	return <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Field<span class="token punctuation">{</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;Department name | 部门名称&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;ancestors&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;Parents&#39; IDs | 父级列表&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;leader&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;Department leader | 部门负责人&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;phone&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;Leader&#39;s phone number | 负责人电话&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;Leader&#39;s email | 部门负责人电子邮箱&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;Remark | 备注&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		field<span class="token punctuation">.</span><span class="token function">Uint64</span><span class="token punctuation">(</span><span class="token string">&quot;parent_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Optional</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;Parent department ID | 父级部门ID&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">func</span> <span class="token punctuation">(</span>Department<span class="token punctuation">)</span> <span class="token function">Mixin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Mixin <span class="token punctuation">{</span>
	return <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Mixin<span class="token punctuation">{</span>
		mixins<span class="token punctuation">.</span>BaseMixin<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		mixins<span class="token punctuation">.</span>StatusMixin<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		mixins<span class="token punctuation">.</span>SortMixin<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">func</span> <span class="token punctuation">(</span>Department<span class="token punctuation">)</span> <span class="token function">Edges</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Edge <span class="token punctuation">{</span>
	return <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Edge<span class="token punctuation">{</span>
		edge<span class="token punctuation">.</span><span class="token function">To</span><span class="token punctuation">(</span><span class="token string">&quot;children&quot;</span><span class="token punctuation">,</span> Department<span class="token punctuation">.</span>Type<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">From</span><span class="token punctuation">(</span><span class="token string">&quot;parent&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Unique</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;parent_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		edge<span class="token punctuation">.</span><span class="token function">From</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> User<span class="token punctuation">.</span>Type<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Ref</span><span class="token punctuation">(</span><span class="token string">&quot;departments&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">func</span> <span class="token punctuation">(</span>Department<span class="token punctuation">)</span> <span class="token function">Annotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>schema<span class="token punctuation">.</span>Annotation <span class="token punctuation">{</span>
	return <span class="token punctuation">[</span><span class="token punctuation">]</span>schema<span class="token punctuation">.</span>Annotation<span class="token punctuation">{</span>
		entsql<span class="token punctuation">.</span>Annotation<span class="token punctuation">{</span>Table<span class="token punctuation">:</span> <span class="token string">&quot;sys_departments&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="generate-department-rpc-code" tabindex="-1"><a class="header-anchor" href="#generate-department-rpc-code" aria-hidden="true">#</a> Generate department RPC code</h2><p>Execute in the project root directory</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">make</span> gen-rpc-ent-logic <span class="token assign-left variable">model</span><span class="token operator">=</span>Department <span class="token assign-left variable">group</span><span class="token operator">=</span>department
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>actually execute the command</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>goctls rpc ent <span class="token parameter variable">--schema</span><span class="token operator">=</span>./rpc/ent/schema <span class="token parameter variable">--service_name</span><span class="token operator">=</span>core <span class="token parameter variable">--project_name</span><span class="token operator">=</span>core <span class="token parameter variable">--o</span><span class="token operator">=</span>./rpc <span class="token parameter variable">--model</span><span class="token operator">=</span>Department <span class="token parameter variable">--group</span><span class="token operator">=</span>department <span class="token parameter variable">--proto_out</span><span class="token operator">=</span>./rpc/desc /department.proto
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>Need to execute <code>make gen-rpc</code> to generate the types file</p></blockquote><h3 id="since-the-core-ent-file-directory-is-in-rpc-the-import-path-in-the-logic-file-needs-to-be-modified" tabindex="-1"><a class="header-anchor" href="#since-the-core-ent-file-directory-is-in-rpc-the-import-path-in-the-logic-file-needs-to-be-modified" aria-hidden="true">#</a> Since the core ent file directory is in rpc, the import path in the logic file needs to be modified</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;context&quot;</span>

	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/internal/svc&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/internal/utils/errorhandler&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/types/core&quot;</span>

	<span class="token string">&quot;github.com/zeromicro/go-zero/core/logx&quot;</span>

	<span class="token string">&quot;github.com/suyuan32/simple-admin-common/i18n&quot;</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="api-example" tabindex="-1"><a class="header-anchor" href="#api-example" aria-hidden="true">#</a> API example</h2><p>Execute in the api directory</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>goctls api proto <span class="token parameter variable">--proto</span><span class="token operator">=</span>/home/ryan/GolandProjects/simple-admin-core/rpc/core.proto <span class="token parameter variable">--api_service_name</span><span class="token operator">=</span>core <span class="token parameter variable">--rpc_service_name</span><span class="token operator">=</span>Core <span class="token parameter variable">--o</span><span class="token operator">=</span>./ <span class="token parameter variable">--model</span><span class="token operator">=</span>Department <span class="token parameter variable">--rpc_name</span><span class="token operator">=</span> Core <span class="token parameter variable">--grpc_package</span><span class="token operator">=</span>github.com/suyuan32/simple-admin-core/rpc/types/core
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The CRUD code will be automatically generated, and the import also needs to be modified</p><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>Since two languages need to be supported by default, add routes to api/internal/i18n/locals/zh.json and api/internal/i18n/locals/en.json respectively</p><p><img src="`+i+'" alt="example" loading="lazy"><img src="'+c+`" alt="example" loading="lazy"></p></div><h3 id="start-rpc-and-api" tabindex="-1"><a class="header-anchor" href="#start-rpc-and-api" aria-hidden="true">#</a> Start rpc and api</h3><p>Execute in the api rpc directory respectively</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go run core.go <span class="token parameter variable">-f</span> etc/core.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="web-development" tabindex="-1"><a class="header-anchor" href="#web-development" aria-hidden="true">#</a> Web development</h3>`,20);function y(w,D){const p=o("ExternalLinkIcon"),t=o("RouterLink");return u(),r("div",null,[m,n("div",v,[b,n("p",null,[a("Unless you want to contribute code to the core service, it is not recommended to write your own code into the core. Please imitate "),n("a",h,[a("example-api"),s(p)]),a(" and "),n("a",g,[a("simple-admin-file"),s(p)]),a(" to create your own service"),f,q,a(" See "),s(t,{to:"/guide/quick-start/api_example.html"},{default:e(()=>[a("API Microservice")]),_:1}),a(" to quickly create an API")])]),_,n("p",null,[s(t,{to:"/guide/basic-config/simple-admin-tools.html"},{default:e(()=>[a("Simple-admin-tools")]),_:1})]),x,n("p",null,[s(t,{to:"/guide/quick-start/core/web_develop_example.html"},{default:e(()=>[a("Simple Admin UI")]),_:1})])])}const E=l(k,[["render",y],["__file","quick_develop_example.html.vue"]]);export{E as default};
