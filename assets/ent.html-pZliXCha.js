import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as c,c as i,a as n,f as s,b as t,e as p}from"./app-W8Vulmvo.js";const u={},l=n("h2",{id:"ent",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#ent","aria-hidden":"true"},"#"),s(" Ent")],-1),r={class:"hint-container info"},k=n("p",{class:"hint-container-title"},"Info",-1),d={href:"https://entgo.io/docs/getting-started",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/ent/ent/blob/master/examples/README.md",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/suyuan32/simple-admin-example-ent",target:"_blank",rel:"noopener noreferrer"},b=p(`<h2 id="quick-start" tabindex="-1"><a class="header-anchor" href="#quick-start" aria-hidden="true">#</a> Quick Start</h2><h3 id="install-ent" tabindex="-1"><a class="header-anchor" href="#install-ent" aria-hidden="true">#</a> Install Ent</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go get <span class="token parameter variable">-d</span> entgo.io/ent/cmd/ent
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="initialize-code" tabindex="-1"><a class="header-anchor" href="#initialize-code" aria-hidden="true">#</a> Initialize code</h3><p>Run in rpc directory</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Creat User schema</span>
go run <span class="token parameter variable">-mod</span><span class="token operator">=</span>mod entgo.io/ent/cmd/ent init User

<span class="token comment"># Generate code，use template ， simple admin core add Page template to make it easier to do pagination</span>
go run <span class="token parameter variable">-mod</span><span class="token operator">=</span>mod entgo.io/ent/cmd/ent generate <span class="token parameter variable">--template</span> <span class="token assign-left variable">glob</span><span class="token operator">=</span><span class="token string">&quot;./ent/template/*.tmpl&quot;</span> ./ent/schema
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="defined-schema" tabindex="-1"><a class="header-anchor" href="#defined-schema" aria-hidden="true">#</a> Defined schema</h3><p>In rpc/ent ，you mainly modify files in schema directory. It is used to define all the models，most of other files in other directories are generated. Mixin is used to define common fields, such as</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> schema

<span class="token keyword">import</span> <span class="token punctuation">(</span>
 <span class="token string">&quot;entgo.io/ent&quot;</span>
 <span class="token string">&quot;entgo.io/ent/dialect/entsql&quot;</span>
 <span class="token string">&quot;entgo.io/ent/schema&quot;</span>
 <span class="token string">&quot;entgo.io/ent/schema/edge&quot;</span>
 <span class="token string">&quot;entgo.io/ent/schema/field&quot;</span>

 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/ent/schema/mixins&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> Role <span class="token keyword">struct</span> <span class="token punctuation">{</span>
 ent<span class="token punctuation">.</span>Schema
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>Role<span class="token punctuation">)</span> <span class="token function">Fields</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Field <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Field<span class="token punctuation">{</span>
  field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;role name | 角色名&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Unique</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;role value for permission control in front end | 角色值，用于前端权限控制&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;default_router&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token string">&quot;dashboard&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;default menu : dashboard | 默认登录页面&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;remark | 备注&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  field<span class="token punctuation">.</span><span class="token function">Uint32</span><span class="token punctuation">(</span><span class="token string">&quot;order_no&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;order number | 排序编号&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>Role<span class="token punctuation">)</span> <span class="token function">Mixin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Mixin <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Mixin<span class="token punctuation">{</span>
  <span class="token comment">// common field</span>
  mixins<span class="token punctuation">.</span>BaseMixin<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  mixins<span class="token punctuation">.</span>StatusMixin<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>Role<span class="token punctuation">)</span> <span class="token function">Edges</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Edge <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Edge<span class="token punctuation">{</span>
  <span class="token comment">// 声明关系, ent 的关系用 edge 表示</span>
  edge<span class="token punctuation">.</span><span class="token function">To</span><span class="token punctuation">(</span><span class="token string">&quot;menus&quot;</span><span class="token punctuation">,</span> Menu<span class="token punctuation">.</span>Type<span class="token punctuation">)</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>Role<span class="token punctuation">)</span> <span class="token function">Annotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>schema<span class="token punctuation">.</span>Annotation <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>schema<span class="token punctuation">.</span>Annotation<span class="token punctuation">{</span>
  entsql<span class="token punctuation">.</span>Annotation<span class="token punctuation">{</span>Table<span class="token punctuation">:</span> <span class="token string">&quot;sys_roles&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mixin-introduction" tabindex="-1"><a class="header-anchor" href="#mixin-introduction" aria-hidden="true">#</a> Mixin Introduction</h3><p>Currently, the project provides several Mixins located in <code>&quot;github.com/suyuan32/simple-admin-common/orm/ent/mixins&quot;</code></p><ul><li>id: Provide self-incrementing integer <code>id</code>, <code>created_at</code>, <code>updated_at</code></li><li>uuid: Provide <code>UUID</code> type <code>id</code> as primary key, <code>created_at</code>, <code>updated_at</code></li><li>status: Provide <code>status</code> field</li><li>sort: Provide <code>sort</code> field</li></ul><h4 id="uuidx-provides-two-methods-for-converting-uuid" tabindex="-1"><a class="header-anchor" href="#uuidx-provides-two-methods-for-converting-uuid" aria-hidden="true">#</a> uuidx provides two methods for converting uuid</h4><ul><li>uuidx.ParseUUIDSlice is used to convert the string array of uuid into the uuid array type of ent</li><li>uuidx.ParseUUIDString is used to convert uuid string to uuid type</li></ul>`,14),g={href:"https://entgo.io/docs/interceptors/#soft-delete",target:"_blank",rel:"noopener noreferrer"},f=p(`<h3 id="initialize" tabindex="-1"><a class="header-anchor" href="#initialize" aria-hidden="true">#</a> Initialize</h3><p>See rpc/internal/svc/service_context.go</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> svc

<span class="token keyword">import</span> <span class="token punctuation">(</span>
 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/ent&quot;</span>
 <span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/internal/config&quot;</span>

 <span class="token string">&quot;github.com/zeromicro/go-zero/core/logx&quot;</span>
 <span class="token string">&quot;github.com/zeromicro/go-zero/core/stores/redis&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> ServiceContext <span class="token keyword">struct</span> <span class="token punctuation">{</span>
 Config config<span class="token punctuation">.</span>Config
 DB     <span class="token operator">*</span>ent<span class="token punctuation">.</span>Client
 Redis  <span class="token operator">*</span>redis<span class="token punctuation">.</span>Redis
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">NewServiceContext</span><span class="token punctuation">(</span>c config<span class="token punctuation">.</span>Config<span class="token punctuation">)</span> <span class="token operator">*</span>ServiceContext <span class="token punctuation">{</span>
 db <span class="token operator">:=</span> ent<span class="token punctuation">.</span><span class="token function">NewClient</span><span class="token punctuation">(</span>
  ent<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span>logx<span class="token punctuation">.</span>Info<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// logger</span>
  ent<span class="token punctuation">.</span><span class="token function">Driver</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>DatabaseConf<span class="token punctuation">.</span><span class="token function">GetCacheDriver</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>RedisConf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  ent<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// debug mode</span>
 <span class="token punctuation">)</span>

 <span class="token comment">// initialize redis</span>
 rds <span class="token operator">:=</span> c<span class="token punctuation">.</span>RedisConf<span class="token punctuation">.</span><span class="token function">NewRedis</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 <span class="token keyword">if</span> <span class="token operator">!</span>rds<span class="token punctuation">.</span><span class="token function">Ping</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  logx<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Initialize redis failed&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token boolean">nil</span>
 <span class="token punctuation">}</span>
 logx<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">&quot;Initialize redis connection successfully&quot;</span><span class="token punctuation">)</span>

 <span class="token keyword">return</span> <span class="token operator">&amp;</span>ServiceContext<span class="token punctuation">{</span>
  Config<span class="token punctuation">:</span> c<span class="token punctuation">,</span>
  DB<span class="token punctuation">:</span>     db<span class="token punctuation">,</span>
  Redis<span class="token punctuation">:</span>  rds<span class="token punctuation">,</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ent-driver" tabindex="-1"><a class="header-anchor" href="#ent-driver" aria-hidden="true">#</a> Ent Driver</h3><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>There are two drivers for ent，cache and no cache.</p></div><blockquote><p>Cache （Use Context control the cache）</p></blockquote><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>Due to a bug in entcache, we temporarily deleted the cache driver and used cache templates instead.</p></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>db <span class="token operator">:=</span> ent<span class="token punctuation">.</span><span class="token function">NewClient</span><span class="token punctuation">(</span>
    ent<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span>logx<span class="token punctuation">.</span>Info<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// logger</span>
    ent<span class="token punctuation">.</span><span class="token function">Driver</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>DatabaseConf<span class="token punctuation">.</span><span class="token function">NewCacheDriver</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>RedisConf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    ent<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// debug mode</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">Info</p><p>Controlling the cache is very simple. By default, the cache is enabled. There are several ways to control the cache:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// For any request, the cache is controlled by l.ctx, the following is the default cache enabled</span>
result<span class="token punctuation">,</span> err <span class="token operator">:=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span>API<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">,</span> in<span class="token punctuation">.</span>Id<span class="token punctuation">)</span>

<span class="token comment">// The following is to skip the cache</span>
result<span class="token punctuation">,</span> err <span class="token operator">:=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span>API<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>entcache<span class="token punctuation">.</span><span class="token function">Skip</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">)</span><span class="token punctuation">,</span> in<span class="token punctuation">.</span>Id<span class="token punctuation">)</span>

<span class="token comment">// The following is to skip and delete the cache. Unlike skip, skip just skips the cache in a single line. In fact, the cache is still there, and other statements can still get his cache</span>
result<span class="token punctuation">,</span> err <span class="token operator">:=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span>API<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>entcache<span class="token punctuation">.</span><span class="token function">Evict</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">)</span><span class="token punctuation">,</span> in<span class="token punctuation">.</span>Id<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><blockquote><p>No cache (Changes will show immediately)</p></blockquote><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>db <span class="token operator">:=</span> ent<span class="token punctuation">.</span><span class="token function">NewClient</span><span class="token punctuation">(</span>
    ent<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span>logx<span class="token punctuation">.</span>Info<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// logger</span>
    ent<span class="token punctuation">.</span><span class="token function">Driver</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>DatabaseConf<span class="token punctuation">.</span><span class="token function">NewNoCacheDriver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    ent<span class="token punctuation">.</span><span class="token function">Debug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// debug mode</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),h={class:"hint-container info"},q=n("p",{class:"hint-container-title"},"Info",-1),y={href:"https://github.com/ariga/entcache",target:"_blank",rel:"noopener noreferrer"},x=p(`<h3 id="usage-in-logic" tabindex="-1"><a class="header-anchor" href="#usage-in-logic" aria-hidden="true">#</a> Usage in logic</h3><p>Create an API <code>rpc/internal/logic/update_role_status_logic.go</code></p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> api

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;context&quot;</span>

	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/internal/svc&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/internal/utils/errorhandler&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/types/core&quot;</span>

	<span class="token string">&quot;github.com/zeromicro/go-zero/core/logx&quot;</span>

	<span class="token string">&quot;github.com/suyuan32/simple-admin-common/i18n&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> CreateApiLogic <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	ctx    context<span class="token punctuation">.</span>Context
	svcCtx <span class="token operator">*</span>svc<span class="token punctuation">.</span>ServiceContext
	logx<span class="token punctuation">.</span>Logger
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">NewCreateApiLogic</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> svcCtx <span class="token operator">*</span>svc<span class="token punctuation">.</span>ServiceContext<span class="token punctuation">)</span> <span class="token operator">*</span>CreateApiLogic <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token operator">&amp;</span>CreateApiLogic<span class="token punctuation">{</span>
		ctx<span class="token punctuation">:</span>    ctx<span class="token punctuation">,</span>
		svcCtx<span class="token punctuation">:</span> svcCtx<span class="token punctuation">,</span>
		Logger<span class="token punctuation">:</span> logx<span class="token punctuation">.</span><span class="token function">WithContext</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>l <span class="token operator">*</span>CreateApiLogic<span class="token punctuation">)</span> <span class="token function">CreateApi</span><span class="token punctuation">(</span>in <span class="token operator">*</span>core<span class="token punctuation">.</span>ApiInfo<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>core<span class="token punctuation">.</span>BaseIDResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	result<span class="token punctuation">,</span> err <span class="token operator">:=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span>API<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetPath</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Path<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetDescription</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Description<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetAPIGroup</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>ApiGroup<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetMethod</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Method<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Save</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> errorhandler<span class="token punctuation">.</span><span class="token function">DefaultEntError</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>Logger<span class="token punctuation">,</span> err<span class="token punctuation">,</span> in<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> <span class="token operator">&amp;</span>core<span class="token punctuation">.</span>BaseIDResp<span class="token punctuation">{</span>Id<span class="token punctuation">:</span> result<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> Msg<span class="token punctuation">:</span> i18n<span class="token punctuation">.</span>CreateSuccess<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="query-data" tabindex="-1"><a class="header-anchor" href="#query-data" aria-hidden="true">#</a> Query data</h3>`,4),w={href:"http://ent.ryansu.tech/#/zh-cn/predicates",target:"_blank",rel:"noopener noreferrer"},I=p(`<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> api

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;context&quot;</span>

	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/ent/predicate&quot;</span>

	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/ent/api&quot;</span>

	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/internal/svc&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/internal/utils/errorhandler&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/types/core&quot;</span>

	<span class="token string">&quot;github.com/zeromicro/go-zero/core/logx&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> GetApiListLogic <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	ctx    context<span class="token punctuation">.</span>Context
	svcCtx <span class="token operator">*</span>svc<span class="token punctuation">.</span>ServiceContext
	logx<span class="token punctuation">.</span>Logger
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">NewGetApiListLogic</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> svcCtx <span class="token operator">*</span>svc<span class="token punctuation">.</span>ServiceContext<span class="token punctuation">)</span> <span class="token operator">*</span>GetApiListLogic <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token operator">&amp;</span>GetApiListLogic<span class="token punctuation">{</span>
		ctx<span class="token punctuation">:</span>    ctx<span class="token punctuation">,</span>
		svcCtx<span class="token punctuation">:</span> svcCtx<span class="token punctuation">,</span>
		Logger<span class="token punctuation">:</span> logx<span class="token punctuation">.</span><span class="token function">WithContext</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>l <span class="token operator">*</span>GetApiListLogic<span class="token punctuation">)</span> <span class="token function">GetApiList</span><span class="token punctuation">(</span>in <span class="token operator">*</span>core<span class="token punctuation">.</span>ApiListReq<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>core<span class="token punctuation">.</span>ApiListResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> predicates <span class="token punctuation">[</span><span class="token punctuation">]</span>predicate<span class="token punctuation">.</span>API
	<span class="token keyword">if</span> in<span class="token punctuation">.</span>Path <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
		predicates <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>predicates<span class="token punctuation">,</span> api<span class="token punctuation">.</span><span class="token function">PathContains</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Path<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> in<span class="token punctuation">.</span>Description <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
		predicates <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>predicates<span class="token punctuation">,</span> api<span class="token punctuation">.</span><span class="token function">DescriptionContains</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Description<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> in<span class="token punctuation">.</span>ApiGroup <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
		predicates <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>predicates<span class="token punctuation">,</span> api<span class="token punctuation">.</span><span class="token function">APIGroupContains</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>ApiGroup<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> in<span class="token punctuation">.</span>Method <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
		predicates <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>predicates<span class="token punctuation">,</span> api<span class="token punctuation">.</span><span class="token function">Method</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Method<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	result<span class="token punctuation">,</span> err <span class="token operator">:=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span>API<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>predicates<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">,</span> in<span class="token punctuation">.</span>Page<span class="token punctuation">,</span> in<span class="token punctuation">.</span>PageSize<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> errorhandler<span class="token punctuation">.</span><span class="token function">DefaultEntError</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>Logger<span class="token punctuation">,</span> err<span class="token punctuation">,</span> in<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	resp <span class="token operator">:=</span> <span class="token operator">&amp;</span>core<span class="token punctuation">.</span>ApiListResp<span class="token punctuation">{</span><span class="token punctuation">}</span>
	resp<span class="token punctuation">.</span>Total <span class="token operator">=</span> result<span class="token punctuation">.</span>PageDetails<span class="token punctuation">.</span>Total

	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> result<span class="token punctuation">.</span>List <span class="token punctuation">{</span>
		resp<span class="token punctuation">.</span>Data <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>Data<span class="token punctuation">,</span> <span class="token operator">&amp;</span>core<span class="token punctuation">.</span>ApiInfo<span class="token punctuation">{</span>
			Id<span class="token punctuation">:</span>          v<span class="token punctuation">.</span>ID<span class="token punctuation">,</span>
			CreatedAt<span class="token punctuation">:</span>   v<span class="token punctuation">.</span>CreatedAt<span class="token punctuation">.</span><span class="token function">UnixMilli</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			Path<span class="token punctuation">:</span>        v<span class="token punctuation">.</span>Path<span class="token punctuation">,</span>
			Description<span class="token punctuation">:</span> v<span class="token punctuation">.</span>Description<span class="token punctuation">,</span>
			ApiGroup<span class="token punctuation">:</span>    v<span class="token punctuation">.</span>APIGroup<span class="token punctuation">,</span>
			Method<span class="token punctuation">:</span>      v<span class="token punctuation">.</span>Method<span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> resp<span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="query-raw-sql" tabindex="-1"><a class="header-anchor" href="#query-raw-sql" aria-hidden="true">#</a> Query raw sql</h3><p>If you want to execute raw sql ，you need to modify makefile ， add flag --feature sql/execquery</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go run <span class="token parameter variable">-mod</span><span class="token operator">=</span>mod entgo.io/ent/cmd/ent generate <span class="token parameter variable">--template</span> <span class="token assign-left variable">glob</span><span class="token operator">=</span><span class="token string">&quot;./rpc/ent/template/*.tmpl&quot;</span> ./rpc/ent/schema <span class="token parameter variable">--feature</span> sql/execquery
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>and then you can use client.QueryContext to execute raw sql</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>students<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span><span class="token function">QueryContext</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;select * from student&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="project-add-pagination-template-by-default-you-can-copy-this-template-to-other-project" tabindex="-1"><a class="header-anchor" href="#project-add-pagination-template-by-default-you-can-copy-this-template-to-other-project" aria-hidden="true">#</a> Project add pagination template by default, you can copy this template to other project</h3><p>In ent/template/pagination.tmpl，add flag --template glob=&quot;./rpc/ent/template/*.tmpl&quot; when generating code and then you can use pagination like below:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>apis<span class="token punctuation">,</span> err <span class="token operator">:=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span>API<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>predicates<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">,</span> in<span class="token punctuation">.</span>Page<span class="token punctuation">,</span> in<span class="token punctuation">.</span>PageSize<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>Note： Order operation needs to be set in Page function, we support Filter for query at the same time</p></blockquote><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>apis<span class="token punctuation">,</span> err <span class="token operator">:=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span>API<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>predicates<span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Page</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">,</span> in<span class="token punctuation">.</span>Page<span class="token punctuation">,</span> in<span class="token punctuation">.</span>PageSize<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>pager <span class="token operator">*</span>ent<span class="token punctuation">.</span>APIPager<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    pager<span class="token punctuation">.</span>Order <span class="token operator">=</span> ent<span class="token punctuation">.</span><span class="token function">Asc</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>FieldID<span class="token punctuation">)</span>
    pager<span class="token punctuation">.</span>Filter <span class="token operator">=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>query <span class="token operator">*</span>ent<span class="token punctuation">.</span>APIQuery<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>ent<span class="token punctuation">.</span>APIQuery<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> query<span class="token punctuation">,</span> <span class="token boolean">nil</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>By default, we order by ID, you do not need to set it.</p><blockquote><p>Set Not Nil template</p></blockquote><p>Used to partially update data, for example:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>l <span class="token operator">*</span>UpdateDepartmentLogic<span class="token punctuation">)</span> <span class="token function">UpdateDepartment</span><span class="token punctuation">(</span>in <span class="token operator">*</span>core<span class="token punctuation">.</span>DepartmentInfo<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>core<span class="token punctuation">.</span>BaseResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	err <span class="token operator">:=</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">.</span>Department<span class="token punctuation">.</span><span class="token function">UpdateOneID</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetNotNilStatus</span><span class="token punctuation">(</span><span class="token function">uint8</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Status<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetNotNilSort</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Sort<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetNotNilName</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Name<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetNotNilAncestors</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Ancestors<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetNotNilLeader</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Leader<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetNotNilPhone</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Phone<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetNotNilEmail</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Email<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetNotNilRemark</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Remark<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">SetNotNilParentID</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>ParentId<span class="token punctuation">)</span><span class="token punctuation">.</span>
		<span class="token function">Exec</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">switch</span> <span class="token punctuation">{</span>
		<span class="token keyword">case</span> ent<span class="token punctuation">.</span><span class="token function">IsNotFound</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">:</span>
			logx<span class="token punctuation">.</span><span class="token function">Errorw</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> logx<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;detail&quot;</span><span class="token punctuation">,</span> in<span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> statuserr<span class="token punctuation">.</span><span class="token function">NewInvalidArgumentError</span><span class="token punctuation">(</span>i18n<span class="token punctuation">.</span>TargetNotFound<span class="token punctuation">)</span>
		<span class="token keyword">case</span> ent<span class="token punctuation">.</span><span class="token function">IsConstraintError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">:</span>
			logx<span class="token punctuation">.</span><span class="token function">Errorw</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> logx<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;detail&quot;</span><span class="token punctuation">,</span> in<span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> statuserr<span class="token punctuation">.</span><span class="token function">NewInvalidArgumentError</span><span class="token punctuation">(</span>i18n<span class="token punctuation">.</span>UpdateFailed<span class="token punctuation">)</span>
		<span class="token keyword">default</span><span class="token punctuation">:</span>
			logx<span class="token punctuation">.</span><span class="token function">Errorw</span><span class="token punctuation">(</span>logmsg<span class="token punctuation">.</span>DatabaseError<span class="token punctuation">,</span> logx<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;detail&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> statuserr<span class="token punctuation">.</span><span class="token function">NewInternalError</span><span class="token punctuation">(</span>i18n<span class="token punctuation">.</span>DatabaseError<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> <span class="token operator">&amp;</span>core<span class="token punctuation">.</span>BaseResp<span class="token punctuation">{</span>Msg<span class="token punctuation">:</span> i18n<span class="token punctuation">.</span>UpdateSuccess<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>SetNotNil function is used to update data only when pointer is not nil.</p></div><h3 id="common-functions-used-in-query" tabindex="-1"><a class="header-anchor" href="#common-functions-used-in-query" aria-hidden="true">#</a> Common functions used in query</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// .ExecX() execute query，don&#39;t return anything</span>
client<span class="token punctuation">.</span>Student<span class="token punctuation">.</span><span class="token function">UpdateOneID</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetName</span><span class="token punctuation">(</span><span class="token string">&quot;Jack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ExecX</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// .Exec() execute query and return error</span>
err <span class="token operator">:=</span> client<span class="token punctuation">.</span>Student<span class="token punctuation">.</span><span class="token function">UpdateOneID</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetName</span><span class="token punctuation">(</span><span class="token string">&quot;Jack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Exec</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// .Save() execute query and  return error and student data</span>
s<span class="token punctuation">,</span> err <span class="token operator">:=</span> client<span class="token punctuation">.</span>Student<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">SetName</span><span class="token punctuation">(</span><span class="token string">&quot;Jack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">SetAddress</span><span class="token punctuation">(</span><span class="token string">&quot;Road&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">SetAge</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">Save</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// .SaveX() execute query and  return student data without error</span>
s <span class="token operator">:=</span> client<span class="token punctuation">.</span>Student<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">SetName</span><span class="token punctuation">(</span><span class="token string">&quot;Jack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">SetAddress</span><span class="token punctuation">(</span><span class="token string">&quot;Road&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">SetAge</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token function">SaveX</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="transaction" tabindex="-1"><a class="header-anchor" href="#transaction" aria-hidden="true">#</a> Transaction</h3><p>The project provides the WithTx method to use database transactions locally, taking updating user information as an example：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>
<span class="token keyword">func</span> <span class="token punctuation">(</span>l <span class="token operator">*</span>UpdateUserLogic<span class="token punctuation">)</span> <span class="token function">UpdateUser</span><span class="token punctuation">(</span>in <span class="token operator">*</span>core<span class="token punctuation">.</span>UserInfo<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>core<span class="token punctuation">.</span>BaseResp<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	err <span class="token operator">:=</span> entx<span class="token punctuation">.</span><span class="token function">WithTx</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">,</span> l<span class="token punctuation">.</span>svcCtx<span class="token punctuation">.</span>DB<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>tx <span class="token operator">*</span>ent<span class="token punctuation">.</span>Tx<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
		updateQuery <span class="token operator">:=</span> tx<span class="token punctuation">.</span>User<span class="token punctuation">.</span><span class="token function">UpdateOneID</span><span class="token punctuation">(</span>uuidx<span class="token punctuation">.</span><span class="token function">ParseUUIDString</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">SetNotNilUsername</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Username<span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">SetNotNilNickname</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Nickname<span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">SetNotNilEmail</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Email<span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">SetNotNilMobile</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Mobile<span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">SetNotNilAvatar</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Avatar<span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">SetNotNilHomePath</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>HomePath<span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">SetNotNilDescription</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Description<span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">SetNotNilDepartmentID</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>DepartmentId<span class="token punctuation">)</span>

		<span class="token keyword">if</span> in<span class="token punctuation">.</span>Password <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			updateQuery <span class="token operator">=</span> updateQuery<span class="token punctuation">.</span><span class="token function">SetNotNilPassword</span><span class="token punctuation">(</span>utils<span class="token punctuation">.</span><span class="token function">BcryptEncrypt</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Password<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> in<span class="token punctuation">.</span>RoleIds <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			err <span class="token operator">:=</span> tx<span class="token punctuation">.</span>User<span class="token punctuation">.</span><span class="token function">UpdateOneID</span><span class="token punctuation">(</span>uuidx<span class="token punctuation">.</span><span class="token function">ParseUUIDString</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClearRoles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Exec</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">)</span>
			<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				<span class="token keyword">return</span> err
			<span class="token punctuation">}</span>

			updateQuery <span class="token operator">=</span> updateQuery<span class="token punctuation">.</span><span class="token function">AddRoleIDs</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>RoleIds<span class="token operator">...</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> in<span class="token punctuation">.</span>PositionIds <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			err <span class="token operator">:=</span> tx<span class="token punctuation">.</span>User<span class="token punctuation">.</span><span class="token function">UpdateOneID</span><span class="token punctuation">(</span>uuidx<span class="token punctuation">.</span><span class="token function">ParseUUIDString</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ClearPositions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Exec</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">)</span>
			<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				<span class="token keyword">return</span> err
			<span class="token punctuation">}</span>

			updateQuery <span class="token operator">=</span> updateQuery<span class="token punctuation">.</span><span class="token function">AddPositionIDs</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span>PositionIds<span class="token operator">...</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">return</span> updateQuery<span class="token punctuation">.</span><span class="token function">Exec</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>ctx<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> errorhandler<span class="token punctuation">.</span><span class="token function">DefaultEntError</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span> in<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> <span class="token operator">&amp;</span>core<span class="token punctuation">.</span>BaseResp<span class="token punctuation">{</span>
		Msg<span class="token punctuation">:</span> i18n<span class="token punctuation">.</span>Success<span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21),C={href:"https://github.com/ariga/entimport",target:"_blank",rel:"noopener noreferrer"},S=p(`<h3 id="common-problem" tabindex="-1"><a class="header-anchor" href="#common-problem" aria-hidden="true">#</a> Common problem</h3><blockquote><p>How to generate database comments?</p></blockquote><p>Just add <code>.Annotations(entsql.WithComments(true))</code> after the corresponding field</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> schema

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;entgo.io/ent&quot;</span>
	<span class="token string">&quot;entgo.io/ent/dialect/entsql&quot;</span>
	<span class="token string">&quot;entgo.io/ent/schema&quot;</span>
	<span class="token string">&quot;entgo.io/ent/schema/field&quot;</span>
	<span class="token string">&quot;entgo.io/ent/schema/index&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-common/orm/ent/mixins&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> API <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	ent<span class="token punctuation">.</span>Schema
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>API<span class="token punctuation">)</span> <span class="token function">Fields</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Field <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Field<span class="token punctuation">{</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;API path | API 路径&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Annotations</span><span class="token punctuation">(</span>entsql<span class="token punctuation">.</span><span class="token function">WithComments</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;description&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;API description | API 描述&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Annotations</span><span class="token punctuation">(</span>entsql<span class="token punctuation">.</span><span class="token function">WithComments</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;api_group&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;API group | API 分组&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Annotations</span><span class="token punctuation">(</span>entsql<span class="token punctuation">.</span><span class="token function">WithComments</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;method&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;HTTP method | HTTP 请求类型&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Annotations</span><span class="token punctuation">(</span>entsql<span class="token punctuation">.</span><span class="token function">WithComments</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>API<span class="token punctuation">)</span> <span class="token function">Mixin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Mixin <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Mixin<span class="token punctuation">{</span>
		mixins<span class="token punctuation">.</span>BaseIDMixin<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>API<span class="token punctuation">)</span> <span class="token function">Edges</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Edge <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>API<span class="token punctuation">)</span> <span class="token function">Indexes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Index <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Index<span class="token punctuation">{</span>
		index<span class="token punctuation">.</span><span class="token function">Fields</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;method&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
			<span class="token function">Unique</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>API<span class="token punctuation">)</span> <span class="token function">Annotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>schema<span class="token punctuation">.</span>Annotation <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>schema<span class="token punctuation">.</span>Annotation<span class="token punctuation">{</span>
		entsql<span class="token punctuation">.</span>Annotation<span class="token punctuation">{</span>Table<span class="token punctuation">:</span> <span class="token string">&quot;sys_apis&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Do not use <code>Nillable()</code> in the <code>Time</code> type field.</p></blockquote>`,5);function D(A,P){const a=o("ExternalLinkIcon");return c(),i("div",null,[l,n("div",r,[k,n("p",null,[n("a",d,[s("Official Doc"),t(a)]),s(),n("a",v,[s("Official Example"),t(a)]),n("a",m,[s("Tutorial Project"),t(a)]),s(" helps you to imporve the skills")])]),b,n("blockquote",null,[n("p",null,[s("Soft delete can visit "),n("a",g,[s("Soft Delete"),t(a)])])]),f,n("div",h,[q,n("p",null,[n("a",y,[s("Ent cache Document"),t(a)])])]),x,n("p",null,[s("See "),n("a",w,[s("Predicates"),t(a)])]),I,n("blockquote",null,[n("p",null,[s("Ent schema import tool "),n("a",C,[s("ent import"),t(a)])])]),S])}const E=e(u,[["render",D],["__file","ent.html.vue"]]);export{E as default};
