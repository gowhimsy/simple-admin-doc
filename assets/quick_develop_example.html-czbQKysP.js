import{_ as c,a as i}from"./example_en_title-lubX2uoZ.js";import{_ as u}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as l,c as r,a as s,b as n,d as a,w as e,e as d}from"./app-Ds4gY2XE.js";const k={},m=s("h2",{id:"快速开发-demo",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#快速开发-demo","aria-hidden":"true"},"#"),n(" 快速开发 demo")],-1),v={class:"hint-container warning"},b=s("p",{class:"hint-container-title"},"注意",-1),g={href:"https://github.com/suyuan32/simple-admin-example-api",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/suyuan32/simple-admin-file",target:"_blank",rel:"noopener noreferrer"},f=s("h2",{id:"安装-goctls",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#安装-goctls","aria-hidden":"true"},"#"),n(" 安装 goctls")],-1),q=d(`<h2 id="rpc-服务例子-以-department-为例" tabindex="-1"><a class="header-anchor" href="#rpc-服务例子-以-department-为例" aria-hidden="true">#</a> RPC 服务例子,以 department 为例</h2><blockquote><p>首先在 rpc/ent/schema 文件夹内添加 department.go</p></blockquote><div class="language-protobuf line-numbers-mode" data-ext="protobuf"><pre class="language-protobuf"><code><span class="token keyword">package</span> schema

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;entgo.io/ent&quot;</span>
	<span class="token string">&quot;entgo.io/ent/dialect/entsql&quot;</span>
	<span class="token string">&quot;entgo.io/ent/schema&quot;</span>
	<span class="token string">&quot;entgo.io/ent/schema/edge&quot;</span>
	<span class="token string">&quot;entgo.io/ent/schema/field&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-common/orm/ent/mixins&quot;</span>
<span class="token punctuation">)</span>

type Department struct <span class="token punctuation">{</span>
	ent<span class="token punctuation">.</span>Schema
<span class="token punctuation">}</span>

<span class="token function">func</span> <span class="token punctuation">(</span>Department<span class="token punctuation">)</span> <span class="token function">Fields</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Field <span class="token punctuation">{</span>
	return <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Field<span class="token punctuation">{</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;Department name | 部门名称&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;ancestors&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;Parents&#39; IDs | 父级列表&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;leader&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;Department leader | 部门负责人&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;phone&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;Leader&#39;s phone number | 负责人电话&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;Leader&#39;s email | 部门负责人电子邮箱&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		field<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;remark&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;Remark | 备注&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		field<span class="token punctuation">.</span><span class="token function">Uint64</span><span class="token punctuation">(</span><span class="token string">&quot;parent_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Optional</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Comment</span><span class="token punctuation">(</span><span class="token string">&quot;Parent department ID | 父级部门ID&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">func</span> <span class="token punctuation">(</span>Department<span class="token punctuation">)</span> <span class="token function">Mixin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Mixin <span class="token punctuation">{</span>
	return <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Mixin<span class="token punctuation">{</span>
		mixins<span class="token punctuation">.</span>BaseMixin<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		mixins<span class="token punctuation">.</span>StatusMixin<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		mixins<span class="token punctuation">.</span>SortMixin<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">func</span> <span class="token punctuation">(</span>Department<span class="token punctuation">)</span> <span class="token function">Edges</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Edge <span class="token punctuation">{</span>
	return <span class="token punctuation">[</span><span class="token punctuation">]</span>ent<span class="token punctuation">.</span>Edge<span class="token punctuation">{</span>
		edge<span class="token punctuation">.</span><span class="token function">To</span><span class="token punctuation">(</span><span class="token string">&quot;children&quot;</span><span class="token punctuation">,</span> Department<span class="token punctuation">.</span>Type<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">From</span><span class="token punctuation">(</span><span class="token string">&quot;parent&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Unique</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span><span class="token string">&quot;parent_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		edge<span class="token punctuation">.</span><span class="token function">From</span><span class="token punctuation">(</span><span class="token string">&quot;users&quot;</span><span class="token punctuation">,</span> User<span class="token punctuation">.</span>Type<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Ref</span><span class="token punctuation">(</span><span class="token string">&quot;departments&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">func</span> <span class="token punctuation">(</span>Department<span class="token punctuation">)</span> <span class="token function">Annotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>schema<span class="token punctuation">.</span>Annotation <span class="token punctuation">{</span>
	return <span class="token punctuation">[</span><span class="token punctuation">]</span>schema<span class="token punctuation">.</span>Annotation<span class="token punctuation">{</span>
		entsql<span class="token punctuation">.</span>Annotation<span class="token punctuation">{</span>Table<span class="token punctuation">:</span> <span class="token string">&quot;sys_departments&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="生成-department-rpc-代码" tabindex="-1"><a class="header-anchor" href="#生成-department-rpc-代码" aria-hidden="true">#</a> 生成 department RPC 代码</h2><p>在 项目根目录执行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">make</span> gen-rpc-ent-logic <span class="token assign-left variable">model</span><span class="token operator">=</span>Department <span class="token assign-left variable">group</span><span class="token operator">=</span>department
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>实际执行命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>goctls rpc ent <span class="token parameter variable">--schema</span><span class="token operator">=</span>./rpc/ent/schema <span class="token parameter variable">--service_name</span><span class="token operator">=</span>core <span class="token parameter variable">--project_name</span><span class="token operator">=</span>core <span class="token parameter variable">--o</span><span class="token operator">=</span>./rpc <span class="token parameter variable">--model</span><span class="token operator">=</span>Department <span class="token parameter variable">--group</span><span class="token operator">=</span>department <span class="token parameter variable">--proto_out</span><span class="token operator">=</span>./rpc/desc/department.proto
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>需要再执行 <code>make gen-rpc</code> 生成 types 文件</p></blockquote><h3 id="由于-core-的-ent-文件目录在-rpc-中-所以-logic-文件内的-import-路径需要修改下" tabindex="-1"><a class="header-anchor" href="#由于-core-的-ent-文件目录在-rpc-中-所以-logic-文件内的-import-路径需要修改下" aria-hidden="true">#</a> 由于 core 的 ent 文件目录在 rpc 中，所以 logic 文件内的 import 路径需要修改下</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;context&quot;</span>

	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/internal/svc&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/internal/utils/errorhandler&quot;</span>
	<span class="token string">&quot;github.com/suyuan32/simple-admin-core/rpc/types/core&quot;</span>

	<span class="token string">&quot;github.com/zeromicro/go-zero/core/logx&quot;</span>

	<span class="token string">&quot;github.com/suyuan32/simple-admin-common/i18n&quot;</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="api-例子" tabindex="-1"><a class="header-anchor" href="#api-例子" aria-hidden="true">#</a> API 例子</h2><p>在 api 目录下执行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>goctls api proto <span class="token parameter variable">--proto</span><span class="token operator">=</span>/home/ryan/GolandProjects/simple-admin-core/rpc/core.proto <span class="token parameter variable">--api_service_name</span><span class="token operator">=</span>core <span class="token parameter variable">--rpc_service_name</span><span class="token operator">=</span>Core <span class="token parameter variable">--o</span><span class="token operator">=</span>./ <span class="token parameter variable">--model</span><span class="token operator">=</span>Department <span class="token parameter variable">--rpc_name</span><span class="token operator">=</span>Core <span class="token parameter variable">--grpc_package</span><span class="token operator">=</span>github.com/suyuan32/simple-admin-core/rpc/types/core
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将会自动生成 CRUD 代码，同样需要修改 import</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>由于默认需要支持两种语言，所以要分别在 <code>api/internal/i18n/locals/zh.json</code> 和 <code>api/internal/i18n/locals/en.json</code> 添加 route</p><p><img src="`+c+'" alt="example" loading="lazy"><img src="'+i+`" alt="example" loading="lazy"></p></div><h3 id="启动-rpc-和-api" tabindex="-1"><a class="header-anchor" href="#启动-rpc-和-api" aria-hidden="true">#</a> 启动 rpc 和 api</h3><p>分别在 api rpc 目录下执行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go run core.go <span class="token parameter variable">-f</span> etc/core.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="网页端开发" tabindex="-1"><a class="header-anchor" href="#网页端开发" aria-hidden="true">#</a> 网页端开发</h3>`,20);function _(x,y){const p=o("ExternalLinkIcon"),t=o("RouterLink");return l(),r("div",null,[m,s("div",v,[b,s("p",null,[n("除非想为 core 服务贡献代码，否则不建议将自己的代码写进 core 。请模仿 "),s("a",g,[n("example-api"),a(p)]),n(" 和 "),s("a",h,[n("simple-admin-file"),a(p)]),n(" 创建自己的服务 查看 "),a(t,{to:"/zh/guide/quick-start/api_example.html"},{default:e(()=>[n("API 微服务")]),_:1}),n(" 快速创建 API")])]),f,s("p",null,[a(t,{to:"/zh/guide/basic-config/simple-admin-tools.html"},{default:e(()=>[n("Simple-admin-tool")]),_:1})]),q,s("p",null,[a(t,{to:"/zh/guide/quick-start/core/web_develop_example.html"},{default:e(()=>[n("Simple Admin UI")]),_:1})])])}const I=u(k,[["render",_],["__file","quick_develop_example.html.vue"]]);export{I as default};
