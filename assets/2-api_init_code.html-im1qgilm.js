import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as e,e as n}from"./app-FG98sd9J.js";const s={},i=n(`<h2 id="api-初始化代码生成" tabindex="-1"><a class="header-anchor" href="#api-初始化代码生成" aria-hidden="true">#</a> API 初始化代码生成</h2><div class="hint-container warning"><p class="hint-container-title">注意</p><p>goctls v1.5.2 +</p></div><h3 id="goctls-extra-init-code" tabindex="-1"><a class="header-anchor" href="#goctls-extra-init-code" aria-hidden="true">#</a> <code>goctls extra init_code</code></h3><blockquote><p>在根目录执行</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>goctls extra init_code <span class="token parameter variable">-m</span> StudentInfo <span class="token parameter variable">-t</span> other <span class="token parameter variable">-n</span> Core
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>参数名称</th><th>必须</th><th>默认值</th><th>介绍</th></tr></thead><tbody><tr><td>model_name</td><td>是</td><td></td><td>模型名称，schema 中内部 struct 名称，如 example 中的 Student</td></tr><tr><td>target</td><td>是</td><td></td><td>目标类型，现在支持 core , other</td></tr><tr><td>output</td><td>否</td><td></td><td>输出路径, 项目根目录 (default &quot;.&quot;)</td></tr><tr><td>service_name</td><td>是</td><td>Other</td><td>服务名称</td></tr><tr><td>route_prefix</td><td>否</td><td></td><td>是否使用路由前缀，前缀必须以 &quot;/&quot; 开头</td></tr><tr><td>style</td><td>是</td><td>go_zero</td><td>init api data 文件名格式</td></tr></tbody></table><blockquote><p>运行 <code>goctls extra init_code -h</code> 查看更多</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ goctls extra init_code <span class="token parameter variable">-h</span>
生成初始化代码

Usage:
  goctls extra init_code <span class="token punctuation">[</span>flags<span class="token punctuation">]</span>

Flags:
  -h, <span class="token parameter variable">--help</span>                  <span class="token builtin class-name">help</span> <span class="token keyword">for</span> init_code
  -m, <span class="token parameter variable">--model_name</span> string     模型名称，应该是驼峰式的，例如：StudentInfo
  -o, <span class="token parameter variable">--output</span> string         输出路径, 项目根目录 <span class="token punctuation">(</span>default <span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span>
  -p, <span class="token parameter variable">--route_prefix</span> string   路由地址前缀
  -n, <span class="token parameter variable">--service_name</span> string   服务名称，如 Core <span class="token punctuation">(</span>default <span class="token string">&quot;Other&quot;</span><span class="token punctuation">)</span>
  -s, <span class="token parameter variable">--style</span> string          文件命名格式，参见 <span class="token punctuation">[</span>https://github.com/zeromicro/go-zero/blob/master/tools/goctl/config/readme.md<span class="token punctuation">]</span> <span class="token punctuation">(</span>default <span class="token string">&quot;go_zero&quot;</span><span class="token punctuation">)</span>
  -t, <span class="token parameter variable">--target</span> string         目标类型，现在支持 core , other
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),d=[i];function r(o,l){return a(),e("div",null,d)}const u=t(s,[["render",r],["__file","2-api_init_code.html.vue"]]);export{u as default};
